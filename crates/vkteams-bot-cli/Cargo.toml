[package]
name = "vkteams-bot-cli"
version = "0.7.5"
authors = ["Andrei G. <k05h31@gmail.com>"]
keywords = ["vkteams", "bot", "api", "automation", "mcp"]
categories = ["api-bindings", "command-line-utilities", "web-programming"]
description = "High-performance VK Teams Bot API toolkit with CLI and MCP server support"
readme = "README.md"
homepage = "https://github.com/bug-ops/vkteams-bot"
documentation = "https://docs.rs/vkteams-bot"
repository = "https://github.com/bug-ops/vkteams-bot/tree/master/crates/vkteams-bot-cli"
license.workspace = true
edition.workspace = true
rust-version.workspace = true

[[bin]]
name = "vkteams-bot-cli"
path = "src/main.rs"

[dependencies]
async-trait = { workspace = true }
base64 = { workspace = true }
chrono = { workspace = true, features = ["serde"] }
clap = { workspace = true, features = ["derive", "std", "color", "usage"] }
clap_complete = { workspace = true, optional = true }
colored = { workspace = true }
cron = { workspace = true }
dashmap = { workspace = true }
dirs = { workspace = true }
exitcode = { workspace = true }
futures = { workspace = true }
indicatif = { workspace = true, features = ["tokio"] }
once_cell = { workspace = true }
openai-api-rs = { workspace = true, optional = true }
pgvector = { workspace = true, features = ["sqlx"], optional = true }
reqwest = { workspace = true, features = ["json", "stream"] }
serde = { workspace = true }
serde_json = { workspace = true }
sqlx = { workspace = true, features = [
    "runtime-tokio-rustls",
    "postgres",
    "uuid",
    "chrono",
    "json",
], optional = true }
tabled = { workspace = true }
tempfile = { workspace = true }
tracing = { workspace = true }
tokio = { workspace = true, features = [
    "rt-multi-thread",
    "macros",
    "fs",
    "net",
    "time",
    "process",
    "signal",
    "io-util",
] }
toml = { workspace = true }
uuid = { workspace = true, features = ["v4"] }
vkteams-bot = { workspace = true, features = [
    "longpoll",
    "otlp",
    "storage-full",
] }

[features]
default = ["completion", "storage"]
completion = ["dep:clap_complete"]
database = ["dep:sqlx"]
vector-search = ["dep:pgvector", "database"]
ai-embeddings = ["dep:openai-api-rs"]
storage = ["database", "vector-search"]
full = ["storage", "ai-embeddings", "completion"]

[dev-dependencies]
assert_cmd = { workspace = true }
console = { workspace = true }
criterion = { workspace = true, features = ["html_reports", "async_tokio"] }
dialoguer = { workspace = true, features = ["fuzzy-select"] }
dotenvy = { workspace = true }
predicates = { workspace = true }
proptest = { workspace = true }
serial_test = { workspace = true }
tokio-test = { workspace = true }
tempfile = { workspace = true }
testcontainers = { workspace = true }
testcontainers-modules = { workspace = true, features = ["postgres"] }

[[bench]]
name = "cli_performance"
harness = false

[[bench]]
name = "config_performance"
harness = false

[[bench]]
name = "specialized_cli_performance"
harness = false

[[bench]]
name = "scheduler_async_perf"
harness = false

[[bench]]
name = "simple_config_bench"
harness = false
