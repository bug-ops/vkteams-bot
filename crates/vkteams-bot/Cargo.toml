[package]
keywords = ["vkteams", "bot", "api", "automation", "mcp"]
categories = ["api-bindings", "command-line-utilities", "web-programming"]
description = "High-performance VK Teams Bot API toolkit with CLI and MCP server support"
readme = "README.md"
repository = "https://github.com/bug-ops/vkteams-bot/tree/master"
homepage = "https://github.com/bug-ops/vkteams-bot"
documentation = "https://docs.rs/vkteams-bot"
name = "vkteams-bot"
version = "0.11.1"
authors = ["Andrei G. <k05h31@gmail.com>"]
license.workspace = true
edition.workspace = true
rust-version.workspace = true

[dependencies]
reqwest = { version = "0.12", features = [
    "json",
    "stream",
    "multipart",
    "rustls-tls",
    "__tls",
] }
toml = "0.8"
once_cell = "1"
tokio = { version = "1", features = ["full"] }
tokio-util = { version = "0.7", features = ["codec"] }
bytes = "1.6"
tower-http = { version = "0.6", features = [
    "timeout",
    "trace",
    "limit",
    "cors",
], optional = true }
tracing = "0.1"
tracing-opentelemetry = { version = "0.31", optional = true }
tracing-subscriber = { version = "0.3", features = [
    "env-filter",
    "json",
], optional = true }
opentelemetry = { version = "0.30", optional = true }
opentelemetry_sdk = { version = "0.30", optional = true }
opentelemetry-otlp = { version = "0.30", features = [
    "grpc-tonic",
], optional = true }
opentelemetry-semantic-conventions = { version = "0.30", features = [
    "semconv_experimental",
], optional = true }
async-trait = { version = "0.1" }
axum = { version = "0.8", features = ["macros", "http2"], optional = true }
serde = { version = "1", features = ["derive"] }
serde_url_params = "0.2"
serde_json = "1"
tera = { version = "1", default-features = false, optional = true }
tonic = { version = "0.13", optional = true }
tonic-health = { version = "0.13", optional = true }
http = "1.2"
paste = "1"
url = "2.5"
vkteams-bot-macros = { version = "0.2", path = "../vkteams-bot-macros" }
dashmap = "6"
crossbeam-utils = "0.8"
rand = "0.9"
tower = { version = "0.5", features = ["util"] }
futures = "0.3"
regex = "1.10"

# Storage dependencies (optional features)
sqlx = { version = "0.8", features = [
    "runtime-tokio-rustls",
    "postgres",
    "uuid",
    "chrono",
    "json",
], optional = true }
pgvector = { version = "0.4", features = ["sqlx", "serde"], optional = true }
uuid = { version = "1.0", features = ["v4", "serde"], optional = true }

# AI/Embeddings (optional)
openai-api-rs = { version = "6", optional = true }
ollama-rs = { version = "0.3", optional = true }
rayon = { version = "1.10", optional = true }

chrono = { version = "0.4", features = ["serde"], optional = true }
thiserror = { version = "2.0", optional = true }

[features]
default = ["longpoll"]
full = [
    "webhook",
    "longpoll",
    "templates",
    "grpc",
    "otlp",
    "ratelimit",
    "storage",
]

# Existing features
longpoll = []
webhook = ["dep:axum", "dep:tower-http"]
templates = ["dep:tera"]
grpc = ["dep:tonic-health", "dep:tonic"]
otlp = [
    "dep:tracing-subscriber",
    "dep:tracing-opentelemetry",
    "dep:opentelemetry",
    "dep:opentelemetry_sdk",
    "dep:opentelemetry-otlp",
    "dep:opentelemetry-semantic-conventions",
]
ratelimit = []

# New storage features
storage = ["database"]
vector-search = ["pgvector", "database"]
database = ["sqlx"]
sqlx = ["dep:sqlx", "dep:uuid", "dep:chrono", "dep:thiserror"]
pgvector = ["dep:pgvector"]
ai-embeddings = ["dep:openai-api-rs", "dep:ollama-rs", "dep:rayon"]
storage-full = ["storage", "vector-search", "ai-embeddings"]

[dev-dependencies]
vkteams-bot = { path = ".", features = ["full"] }
tonic = "0.13"
dotenvy = "0.15"
criterion = { version = "0.6", features = [
    "async",
    "async_tokio",
    "html_reports",
] }
dhat = { version = "0.3" }
tempfile = "3"
proptest = "1.4"
serial_test = "3"
testcontainers = "0.24"
testcontainers-modules = { version = "0.12", features = ["postgres"] }
futures = "0.3"

[[bench]]
name = "performance"
harness = false

[[bench]]
name = "chat_id_optimization"
harness = false

[[bench]]
name = "longpoll_parallel_perf"
harness = false

[[bench]]
name = "net_perf_simple"
harness = false

[[bench]]
name = "net_performance"
harness = false

[[bench]]
name = "ratelimit_lockfree_perf"
harness = false
